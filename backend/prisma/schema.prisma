generator client {
    provider = "prisma-client-js"
}


datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id Int @id @default(autoincrement())
    name String @db.VarChar(30)
    email String @db.VarChar(100)
    password String @db.VarChar(20)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    Like Like[]
    ViewDate ViewDate[]
    Post Post[]
}

model Post {
    id Int @id @default(autoincrement())
    writerId Int
    replyId Int?
    content String @db.VarChar(3000)
    imgLink String? @db.VarChar(1000)
    viewCnt Int @default(0)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    repliedPost Post[] @relation("Reply")
    Like Like[]
    ViewDate ViewDate[]
    Writer User @relation(fields:[writerId], references: [id], onDelete:NoAction, onUpdate: NoAction, map:"PostIdfk1")
    reply Post? @relation("Reply", fields: [replyId], references: [id], onDelete: NoAction,onUpdate: NoAction, map:"PostIdfk2")
}

model Like {
    id Int @id @default(autoincrement())
    userId Int
    postId Int
    User User @relation(fields: [userId], references:[id], onDelete: NoAction, onUpdate: NoAction, map: "LikeIdfk1")
    Post Post @relation(fields: [postId], references:[id], onDelete: NoAction, onUpdate: NoAction, map:"LikeIdfk2")
}

model ViewDate{
    id Int @id @default(autoincrement())
    lastView DateTime
    writerId Int
    postId Int
    Writer User @relation(fields:[writerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map:"ViewDateIdfk1")
    Post Post @relation(fields:[postId], references: [id], onDelete: NoAction, onUpdate: NoAction, map:"ViewDateIdfk2")
}